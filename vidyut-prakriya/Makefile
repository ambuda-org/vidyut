# Main commands
# ~~~~~~~~~~~~~

# Generates all tinantas supported by the program and writes them to stdout.
create_tinantas:
	cargo run --release --bin create_tinantas


# Generates all krdantas-prAtipadikas supported by the program and writes them to stdout.
create_krdantas:
	cargo run --release --bin create_krdantas


# Unit tests
# ~~~~~~~~~~

# Runs all unit tests in the crate.
unit_tests:
	cargo test --lib

# Generates a simple coverage report and writes it to disk as an HTML file.
coverage:
	cargo llvm-cov --html


# Integration tests
# ~~~~~~~~~~~~~~~~~

# Generates all tinantas supported by the program and writes them to disk.
create_test_files:
	cargo build --release
	../target/release/create_tinantas --prayoga kartari > test-files/tinantas-basic-kartari.csv
	../target/release/create_tinantas --sanadi Ric --prayoga kartari > test-files/tinantas-nic-kartari.csv
	../target/release/create_tinantas --sanadi san --prayoga kartari > test-files/tinantas-san-kartari.csv
	../target/release/create_tinantas --sanadi yaN --prayoga kartari > test-files/tinantas-yan-kartari.csv
	../target/release/create_tinantas --prayoga karmani > test-files/tinantas-basic-karmani.csv
	../target/release/create_krdantas --krt ktvA > test-files/krdantas-ktvA.csv
	../target/release/create_krdantas --krt kta > test-files/krdantas-kta.csv

# Runs a full evaluation over all forms generated by vidyut-prakriya. `hash` is
# the SHA-256 hash of the test file. We use `hash` to verify test file
# integrity and ensure that our test cases are stable.
#
# NOTE: test files might contain invalid forms. Our goal with this test is
# simply to confirm that the system hasn't changed in unexpected ways.
test_all: test_tinantas test_krdantas

test_tinantas:
	cargo build --release
	../target/release/test_tinantas \
		--test-cases test-files/tinantas-basic-kartari.csv \
	    --hash "2cb9791994862818fbfd2438a375f7bbb9f863c493443528ae8459b56d159b9c"
	../target/release/test_tinantas \
		--test-cases test-files/tinantas-nic-kartari.csv \
	    --hash "29d0a240035b8e605c097c856edc1851e101a8f98f8538ec52a033d32a048faa"
	../target/release/test_tinantas \
		--test-cases test-files/tinantas-san-kartari.csv \
	    --hash "02bf2554f11c5f9ce9a95cb295d17ad76088dbefc5178652ae0341795e6807b2"
	../target/release/test_tinantas \
		--test-cases test-files/tinantas-yan-kartari.csv \
	    --hash "a2c59e778a9bbd0228508d1060232c9d84880cae1544b91035302f2acb6335d9"
	../target/release/test_tinantas \
		--test-cases test-files/tinantas-basic-karmani.csv \
	    --hash "37b444217f1f28e564a37224535f47567300d48125685ec890a2d00b8ab1e1fa"

test_krdantas:
	../target/release/test_krdantas \
		--test-cases test-files/krdantas-ktvA.csv \
	    --hash "424ce830e8b5c10a114f6640f7ab06e82427d041edd38197ec1754100bded62a"
	../target/release/test_krdantas \
		--test-cases test-files/krdantas-kta.csv \
	    --hash "1b57935f24d134b1d6f552991e34ce486af6f18e7a1a1d5764b37dd3e8fe976e"

test_subantas:
	# Work-in-progress tests for subantas.
	./target/release/test_subantas


# Performance
# ~~~~~~~~~~~

# Profiles the program's execution time on OSX. This command will probably not
# work on other operating systems.
profile-time-osx:
	cargo instruments -t time --release --bin create_test_file


# Other
# ~~~~~

# Generates project docs and opens them in your default browser.
docs:
	cargo doc --no-deps --open

# Builds WASM module and JS wrapper (pkg/vidyut_prakriya.js).
wasm:
	wasm-pack build --target web --release --features wasm_bindings
