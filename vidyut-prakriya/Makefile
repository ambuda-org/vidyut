# Unit tests
# ~~~~~~~~~~

# Runs all unit tests in the crate.
unit_tests:
	cargo test --lib

# Generates a simple coverage report and writes it to disk as an HTML file.
coverage:
	cargo llvm-cov --html


# Integration tests
# ~~~~~~~~~~~~~~~~~

# Generates all tinantas supported by the program and writes them to disk.
create_test_files: create_tinantas create_krdantas create_dhatus

create_tinantas:
	cargo build --release --bin create_tinantas
	../target/release/create_tinantas --prayoga kartari > test-files/tinantas-basic-kartari.csv
	../target/release/create_tinantas --prayoga kartari --sanadi Ric  > test-files/tinantas-nic-kartari.csv
	../target/release/create_tinantas --prayoga kartari --sanadi san > test-files/tinantas-san-kartari.csv
	../target/release/create_tinantas --prayoga kartari --sanadi yaN > test-files/tinantas-yan-kartari.csv
	../target/release/create_tinantas --prayoga kartari --sanadi yaNluk > test-files/tinantas-yan-luk-kartari.csv
	../target/release/create_tinantas --prayoga kartari --sanadi san,Ric > test-files/tinantas-san-nic-kartari.csv
	../target/release/create_tinantas --prayoga kartari --sanadi Ric,san > test-files/tinantas-nic-san-kartari.csv
	../target/release/create_tinantas --prayoga karmani > test-files/tinantas-basic-karmani.csv
	../target/release/create_tinantas --prayoga karmani --sanadi Ric > test-files/tinantas-nic-karmani.csv
	../target/release/create_tinantas --prayoga karmani --sanadi san > test-files/tinantas-san-karmani.csv
	../target/release/create_tinantas --prayoga karmani --sanadi yaN > test-files/tinantas-yan-karmani.csv
	../target/release/create_tinantas --prayoga karmani --sanadi san,Ric > test-files/tinantas-san-nic-karmani.csv
	../target/release/create_tinantas --prayoga karmani --sanadi Ric,san > test-files/tinantas-nic-san-karmani.csv

create_krdantas:
	cargo build --release --bin create_krdantas
	../target/release/create_krdantas > test-files/krdantas-basic.csv
	../target/release/create_krdantas --sanadi Ric > test-files/krdantas-nic.csv
	../target/release/create_krdantas --sanadi san > test-files/krdantas-san.csv
	../target/release/create_krdantas --sanadi yaN > test-files/krdantas-yan.csv
	../target/release/create_krdantas --sanadi yaNluk > test-files/krdantas-yan-luk.csv

create_dhatus:
	cargo build --release --bin create_dhatus
	../target/release/create_dhatus > test-files/dhatus.csv

# Runs a full evaluation over all forms generated by vidyut-prakriya. `hash` is
# the SHA-256 hash of the test file. We use `hash` to verify test file
# integrity and ensure that our test cases are stable.
#
# NOTE: test files might contain invalid forms. Our goal with this test is
# simply to confirm that the system hasn't changed in unexpected ways.
test_all: test_tinantas test_krdantas test_dhatus

test_tinantas:
	cargo build --release --bin test_results
	../target/release/test_results \
		--data-type tinanta \
		--test-cases test-files/tinantas-basic-kartari.csv \
	  --hash "abe62f683a0c3e8cec8f3536e7ea0234ea8af68d6cf7b49e209597eb8f855476"
	../target/release/test_results \
		--data-type tinanta \
  	--test-cases test-files/tinantas-nic-kartari.csv \
    --hash "9bfa0fd1eb7d49b4cdf15d50d5c1dbc053dfafbe1a4da673ec41a66fdfa2fc9a"
	../target/release/test_results \
		--data-type tinanta \
		--test-cases test-files/tinantas-san-kartari.csv \
		--hash "d3cf5ec44079bceb409696598b68bf3f57b604d48e018a3360dcb00ff5c04fb8"
	../target/release/test_results \
		--data-type tinanta \
		--test-cases test-files/tinantas-yan-kartari.csv \
		--hash "1b7d63e8da81ae220a9787b77588d021daeca9696fd58e6ed463bc3e8ac1e8e4"
	../target/release/test_results \
		--data-type tinanta \
		--test-cases test-files/tinantas-yan-luk-kartari.csv \
		--hash "3256297c907d762d0809d38168172fa151e168187542031b09ef7bf460bc4c28"
	../target/release/test_results \
		--data-type tinanta \
		--test-cases test-files/tinantas-san-nic-kartari.csv \
		--hash "18d96165568b2fcf470c15aace41454010f548ec4559cdac24b1f1fd209af340"
	../target/release/test_results \
		--data-type tinanta \
		--test-cases test-files/tinantas-nic-san-kartari.csv \
		--hash "e396839ebf339561d0dcaf87b695d1675ac113629d0a0becbe695a1ac77926a5"
	../target/release/test_results \
		--data-type tinanta \
		--test-cases test-files/tinantas-basic-karmani.csv \
    --hash "b8540f8aca8eb202fb1cb949ebff90332df7658a2bf94f12542b59196ed80cc8"
	../target/release/test_results \
		--data-type tinanta \
		--test-cases test-files/tinantas-nic-karmani.csv \
    --hash "afb4807a99475dd7480c41f0a4baf59d8bdce1c65a8e5340fcaaf189f190b110"
	../target/release/test_results \
		--data-type tinanta \
		--test-cases test-files/tinantas-san-karmani.csv \
    --hash "9d40a83d67a79556a8c2491430ab5f5884b8a1a89ed64786a45a987637cd7c3f"
	../target/release/test_results \
		--data-type tinanta \
		--test-cases test-files/tinantas-yan-karmani.csv \
    --hash "9311a5467efadbf224b4f9dc6b981eb3845118cc187adeecc957b41c1f3acd78"
	../target/release/test_results \
		--data-type tinanta \
		--test-cases test-files/tinantas-san-nic-karmani.csv \
		--hash "ea21729c7a4ceb7fcc2c66af097a0f053daf06b0e36c9324b8cbd34d82f9fbe7"
	../target/release/test_results \
		--data-type tinanta \
		--test-cases test-files/tinantas-nic-san-karmani.csv \
		--hash "4845c125a3acab60fe9189960ace4402cd244db527bd16f7238930a39c547ba8"

test_krdantas:
	cargo build --release --bin test_results
	../target/release/test_results \
		--data-type krdanta \
		--test-cases test-files/krdantas-basic.csv \
	  --hash "540f1595ec0ac3957cc00dd236dd6af67307b26cc45312b13e2a164ddfaeb89d"
	../target/release/test_results \
		--data-type krdanta \
		--test-cases test-files/krdantas-nic.csv \
	  --hash "2d912641df671b2f76920efc0ed31d25d8d13a4dffb74afa471351df6ae0bc31"
	../target/release/test_results \
		--data-type krdanta \
		--test-cases test-files/krdantas-san.csv \
	  --hash "4870af19eb0e42847f8f1d532e66d71312a702454aee1e47275a953cd56fe8e6"
	../target/release/test_results \
		--data-type krdanta \
		--test-cases test-files/krdantas-yan.csv \
	  --hash "2af8e18fcfd0952679fa69b5011c3b40cdca83b6a899b453d62c6d7a9ebc54a5"
	../target/release/test_results \
		--data-type krdanta \
		--test-cases test-files/krdantas-yan-luk.csv \
	  --hash "5399c6a8f2d13ba00b0249ee9b9359ef4c6f4f075e6ab459c97b591cecc71545"

test_dhatus:
	cargo build --release --bin test_results
	../target/release/test_results \
		--data-type dhatu \
		--test-cases test-files/dhatus.csv \
	  --hash "793e576b1b24e4982a8f51e4789927786eb17eabbeb0fd5c29dc77d89a8eb4b2"


test_subantas:
	cargo run --bin test_subantas -- \
		--test-cases test-files/subantas.csv

check_rule_coverage:
	./scripts/check_rule_coverage.py > report.log 


# Performance
# ~~~~~~~~~~~

# Profiles the program's execution time on OSX. This command will probably not
# work on other operating systems.
profile-time-osx:
	cargo instruments -t time --release --example bench


# Other
# ~~~~~

# Generates project docs and opens them in your default browser.
docs:
	cargo doc --no-deps --open


# Web builds
# ----------

# Builds WASM module and JS wrapper (pkg/vidyut_prakriya.js).
#
# This is a release build. Creating it will be slower but smaller and (perhaps)
# more performant.
wasm_release:
	wasm-pack build --target web --release -- --features serde

# Builds WASM module and JS wrapper (pkg/vidyut_prakriya.js).
#
# This is a dev build. Creating it will be faster, but size and performance
# will not be optimized.
wasm_dev:
	wasm-pack build --target web -- --features serde

# Builds a simple web debugger.
debugger:
	./scripts/run-debugger.sh
