# Unit tests
# ~~~~~~~~~~

# Runs all unit tests in the crate.
unit_tests:
	cargo test --lib

# Generates a simple coverage report and writes it to disk as an HTML file.
coverage:
	cargo llvm-cov --html


# Integration tests
# ~~~~~~~~~~~~~~~~~

# Generates all tinantas, krdantas, and dhatus supported by the program and writes them to disk.
create_test_files:
	cargo build --release --bin create_test_files
	../target/release/create_test_files --output-dir test-files

# Runs a full evaluation over all forms generated by vidyut-prakriya. `hash` is
# the SHA-256 hash of the test file. We use `hash` to verify test file
# integrity and ensure that our test cases are stable.
#
# NOTE: test files might contain invalid forms. Our goal with this test is
# simply to confirm that the system hasn't changed in unexpected ways.
test_all: test_tinantas test_krdantas test_dhatus

test_tinantas:
	cargo build --release --bin test_results
	../target/release/test_results \
		--data-type tinanta \
		--test-cases test-files/tinantas-basic.csv \
	  --hash "8ae177857fb0ba870a6269ec6d96a78ee7e3d6ae0586f69e072b29ccc9108562"
	../target/release/test_results \
		--data-type tinanta \
  	--test-cases test-files/tinantas-nic.csv \
    --hash "1cc63c02a628e8ed843c455c90dd327f25c7c824fea32e8642851b0011e47666"
	../target/release/test_results \
		--data-type tinanta \
		--test-cases test-files/tinantas-san.csv \
		--hash "69c5de2266c7a8911fbea09fbef85951c94da818f7994d560ce62de92dd18074"
	../target/release/test_results \
		--data-type tinanta \
		--test-cases test-files/tinantas-yan.csv \
		--hash "436443c42c36e075bb866088b92456a8fedbe8c5f63686cae72d9f04897402ef"
	../target/release/test_results \
		--data-type tinanta \
		--test-cases test-files/tinantas-yan-luk.csv \
		--hash "bf4fbfd3e775057628656ce3af7760a2f80b69e2a410086465d616330e7041a7"
	../target/release/test_results \
		--data-type tinanta \
		--test-cases test-files/tinantas-san-nic.csv \
		--hash "4b7a5b83786a3ef53dec0bbf580a224f5161bf2f3dc2f2e8a917ba231e25e225"
	../target/release/test_results \
		--data-type tinanta \
		--test-cases test-files/tinantas-nic-san.csv \
		--hash "fb647997a7f2956a45deeb7400d8ed11359448a0edc43c16725ba597855db768"

test_krdantas:
	cargo build --release --bin test_results
	../target/release/test_results \
		--data-type krdanta \
		--test-cases test-files/krdantas-basic.csv \
	  --hash "6160c100552db7946294e12054e57111e36e766d726dd0268b828eeb14056369"
	../target/release/test_results \
		--data-type krdanta \
		--test-cases test-files/krdantas-nic.csv \
	  --hash "d7579416e7c2041f50c8502e3f48610e8f874625e39b215db782240829baf63e"
	../target/release/test_results \
		--data-type krdanta \
		--test-cases test-files/krdantas-san.csv \
	  --hash "66d71a1de6fc1803edb7e65ee1332e2432aa6f8f29ec9055a86c646307c7207f"
	../target/release/test_results \
		--data-type krdanta \
		--test-cases test-files/krdantas-yan.csv \
	  --hash "5512ddc37a4ead2d0f983875f3c705c0237d2d482a24dcff650e8756c45f0f0e"
	../target/release/test_results \
		--data-type krdanta \
		--test-cases test-files/krdantas-yan-luk.csv \
	  --hash "ad5d53cf24b411e0b9ffbf7a95ee36113d76551ddef0ce06128fb44e436570a1"

test_dhatus:
	cargo build --release --bin test_results
	../target/release/test_results \
		--data-type dhatu \
		--test-cases test-files/dhatus.csv \
	  --hash "aef40ba22893ed6d6c7fd7c126b93435faa9418491002b1dc8ae895c7a6e28e8"


test_subantas:
	cargo run --bin test_subantas -- \
		--test-cases test-files/subantas.csv

check_rule_coverage:
	./scripts/check_rule_coverage.py > report.log 


# Performance
# ~~~~~~~~~~~

# Profiles the program's execution time on OSX. This command will probably not
# work on other operating systems.
profile-time-osx:
	cargo instruments -t time --release --example bench


# Other
# ~~~~~

# Generates project docs and opens them in your default browser.
docs:
	cargo doc --no-deps --open


# Web builds
# ----------

# Builds WASM module and JS wrapper (pkg/vidyut_prakriya.js).
#
# This is a release build. Creating it will be slower but smaller and (perhaps)
# more performant.
wasm_release:
	wasm-pack build --target web --release -- --features serde

# Builds WASM module and JS wrapper (pkg/vidyut_prakriya.js).
#
# This is a dev build. Creating it will be faster, but size and performance
# will not be optimized.
wasm_dev:
	wasm-pack build --target web -- --features serde

# Builds a simple web debugger.
debugger:
	./scripts/run-debugger.sh
