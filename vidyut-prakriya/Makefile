# Main commands
# ~~~~~~~~~~~~~

# Generates all tinantas supported by the program and writes them to stdout.
create_tinantas:
	cargo run --release --bin create_tinantas


# Generates all krdantas-prAtipadikas supported by the program and writes them to stdout.
create_krdantas:
	cargo run --release --bin create_krdantas


# Unit tests
# ~~~~~~~~~~

# Runs all unit tests in the crate.
unit_tests:
	cargo test --lib

# Generates a simple coverage report and writes it to disk as an HTML file.
coverage:
	cargo llvm-cov --html


# Integration tests
# ~~~~~~~~~~~~~~~~~

# Generates all tinantas supported by the program and writes them to disk.
create_test_files:
	cargo build --release
	../target/release/create_tinantas --prayoga kartari > test-files/tinantas-basic-kartari.csv
	../target/release/create_tinantas --prayoga kartari --sanadi Ric  > test-files/tinantas-nic-kartari.csv
	../target/release/create_tinantas --prayoga kartari --sanadi san > test-files/tinantas-san-kartari.csv
	../target/release/create_tinantas --prayoga kartari --sanadi yaN > test-files/tinantas-yan-kartari.csv
	../target/release/create_tinantas --prayoga kartari --sanadi yaNluk > test-files/tinantas-yan-luk-kartari.csv
	../target/release/create_tinantas --prayoga kartari --sanadi san,Ric > test-files/tinantas-san-nic-kartari.csv
	../target/release/create_tinantas --prayoga kartari --sanadi Ric,san > test-files/tinantas-nic-san-kartari.csv
	../target/release/create_tinantas --prayoga karmani > test-files/tinantas-basic-karmani.csv
	../target/release/create_tinantas --prayoga karmani --sanadi Ric > test-files/tinantas-nic-karmani.csv
	../target/release/create_tinantas --prayoga karmani --sanadi san > test-files/tinantas-san-karmani.csv
	../target/release/create_tinantas --prayoga karmani --sanadi yaN > test-files/tinantas-yan-karmani.csv
	../target/release/create_tinantas --prayoga karmani --sanadi san,Ric > test-files/tinantas-san-nic-karmani.csv
	../target/release/create_tinantas --prayoga karmani --sanadi Ric,san > test-files/tinantas-nic-san-karmani.csv
	../target/release/create_krdantas > test-files/krdantas-basic.csv
	../target/release/create_krdantas --sanadi Ric > test-files/krdantas-nic.csv
	../target/release/create_krdantas --sanadi san > test-files/krdantas-san.csv
	../target/release/create_krdantas --sanadi yaN > test-files/krdantas-yan.csv
	../target/release/create_krdantas --sanadi yaNluk > test-files/krdantas-yan-luk.csv
	../target/release/create_dhatus > test-files/dhatus.csv

# Runs a full evaluation over all forms generated by vidyut-prakriya. `hash` is
# the SHA-256 hash of the test file. We use `hash` to verify test file
# integrity and ensure that our test cases are stable.
#
# NOTE: test files might contain invalid forms. Our goal with this test is
# simply to confirm that the system hasn't changed in unexpected ways.
test_all: test_tinantas test_krdantas test_dhatus

test_tinantas:
	cargo build --release --bin test_results
	../target/release/test_results \
		--data-type tinanta \
		--test-cases test-files/tinantas-basic-kartari.csv \
	  --hash "51d6017bcc2516e2af0d028d251b72165e2f19bafb0839e35110f157934609db"
	../target/release/test_results \
		--data-type tinanta \
  	--test-cases test-files/tinantas-nic-kartari.csv \
    --hash "503fe8ace23a847f8ea02c23263112a0bbb484aa1971fdba5a811a5096dd2681"
	../target/release/test_results \
		--data-type tinanta \
		--test-cases test-files/tinantas-san-kartari.csv \
		--hash "9145fff93b263223e270a2cde065bb3fb0c811df24ab42a043eae39e2f756234"
	../target/release/test_results \
		--data-type tinanta \
		--test-cases test-files/tinantas-yan-kartari.csv \
		--hash "1998c701f314c8bcdcd48d59300debabd39d3ba586341e5a515815d6a1c2503f"
	../target/release/test_results \
		--data-type tinanta \
		--test-cases test-files/tinantas-yan-luk-kartari.csv \
		--hash "8339c74d2414ee47e76623accfe9064b050164fadb0fa113a469df9b8181e074"
	../target/release/test_results \
		--data-type tinanta \
		--test-cases test-files/tinantas-san-nic-kartari.csv \
		--hash "c5977158acab3b00601ef4b78c29c045a6d9586fb9aa0502856fdab73e630bf5"
	../target/release/test_results \
		--data-type tinanta \
		--test-cases test-files/tinantas-nic-san-kartari.csv \
		--hash "c292a9b75da8feaa4c4f318900bc257ab703ece640f691ac9c7ac52a683679d2"
	../target/release/test_results \
		--data-type tinanta \
		--test-cases test-files/tinantas-basic-karmani.csv \
    --hash "a30032f2b32cd8008c91c95b7e03e3e9f11386179bb70fd26f5eccf8748d0afe"
	../target/release/test_results \
		--data-type tinanta \
		--test-cases test-files/tinantas-nic-karmani.csv \
    --hash "7a5358df11a14351e771b917742a83df10d4013e844419ddeadc91c8cc206548"
	../target/release/test_results \
		--data-type tinanta \
		--test-cases test-files/tinantas-san-karmani.csv \
    --hash "725dfe8657b9543aede4a73798b50a89a389c0d74ce5c0c9ecb91f4447d60495"
	../target/release/test_results \
		--data-type tinanta \
		--test-cases test-files/tinantas-yan-karmani.csv \
    --hash "6167063aed3186aae0a01d635156618f6cf7ba09c7d7c2ed93e076dc5ef46841"
	../target/release/test_results \
		--data-type tinanta \
		--test-cases test-files/tinantas-san-nic-karmani.csv \
		--hash "8c3925ad25154ad44ceb3f726843fcb0a453a71b93fb2d4a1c55d20a905dd292"
	../target/release/test_results \
		--data-type tinanta \
		--test-cases test-files/tinantas-nic-san-karmani.csv \
		--hash "d679a4a2d3487a99899cb2793c8d890f570016a60d8b5460a62cde92a0dfec76"

test_krdantas:
	cargo build --release --bin test_results
	../target/release/test_results \
		--data-type krdanta \
		--test-cases test-files/krdantas-basic.csv \
	  --hash "2633afc74d312baeaba290c517e2427571bf9a5d2fb6b65b57b97fe3274ed9f0"
	../target/release/test_results \
		--data-type krdanta \
		--test-cases test-files/krdantas-nic.csv \
	  --hash "b4ed0d24a5436a3879911ecc1ed420db09128056dea80d298cb12412ff79e04b"
	../target/release/test_results \
		--data-type krdanta \
		--test-cases test-files/krdantas-san.csv \
	  --hash "2b1cf48f5b3ad1073c83c9970acf778135bb3375d18b5316a826ece5f2105fca"
	../target/release/test_results \
		--data-type krdanta \
		--test-cases test-files/krdantas-yan.csv \
	  --hash "038ac65be234cfde608106385964b3a67e66fe508d6f91a14b8bff9b6a1c017f"
	../target/release/test_results \
		--data-type krdanta \
		--test-cases test-files/krdantas-yan-luk.csv \
	  --hash "ed81f38274b4ac93370559b4b7881e80c4403e96770c09fcba0da41f1f39978d"

test_dhatus:
	cargo build --release --bin test_results
	../target/release/test_results \
		--data-type dhatu \
		--test-cases test-files/dhatus.csv \
	  --hash "813ceb212c3d500ed4e4a2b892c8c72504be8c0f3602831135698bcd54e62b5f"


test_subantas:
	cargo run --bin test_subantas -- \
		--test-cases test-files/subantas.csv

check_rule_coverage:
	./scripts/check_rule_coverage.py > report.log 


# Performance
# ~~~~~~~~~~~

# Profiles the program's execution time on OSX. This command will probably not
# work on other operating systems.
profile-time-osx:
	cargo instruments -t time --release --example bench


# Other
# ~~~~~

# Generates project docs and opens them in your default browser.
docs:
	cargo doc --no-deps --open


# Web builds
# ----------

# Builds WASM module and JS wrapper (pkg/vidyut_prakriya.js).
#
# This is a release build. Creating it will be slower but smaller and (perhaps)
# more performant.
wasm_release:
	wasm-pack build --target web --release -- --features serde

# Builds WASM module and JS wrapper (pkg/vidyut_prakriya.js).
#
# This is a dev build. Creating it will be faster, but size and performance
# will not be optimized.
wasm_dev:
	wasm-pack build --target web -- --features serde

# Builds a simple web debugger.
debugger:
	./scripts/run-debugger.sh
