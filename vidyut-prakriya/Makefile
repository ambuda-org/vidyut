# Main commands
# ~~~~~~~~~~~~~

# Generates all tinantas supported by the program and writes them to stdout.
create_tinantas:
	cargo run --release --bin create_tinantas


# Generates all krdantas-prAtipadikas supported by the program and writes them to stdout.
create_krdantas:
	cargo run --release --bin create_krdantas


# Unit tests
# ~~~~~~~~~~

# Runs all unit tests in the crate.
unit_tests:
	cargo test --lib

# Generates a simple coverage report and writes it to disk as an HTML file.
coverage:
	cargo llvm-cov --html


# Integration tests
# ~~~~~~~~~~~~~~~~~

# Generates all tinantas supported by the program and writes them to disk.
create_test_files:
	cargo build --release
	../target/release/create_tinantas --prayoga kartari > test-files/tinantas-basic-kartari.csv
	../target/release/create_tinantas --prayoga kartari --sanadi Ric  > test-files/tinantas-nic-kartari.csv
	../target/release/create_tinantas --prayoga kartari --sanadi san > test-files/tinantas-san-kartari.csv
	../target/release/create_tinantas --prayoga kartari --sanadi yaN > test-files/tinantas-yan-kartari.csv
	../target/release/create_tinantas --prayoga kartari --sanadi yaNluk > test-files/tinantas-yan-luk-kartari.csv
	../target/release/create_tinantas --prayoga kartari --sanadi san,Ric > test-files/tinantas-san-nic-kartari.csv
	../target/release/create_tinantas --prayoga kartari --sanadi Ric,san > test-files/tinantas-nic-san-kartari.csv
	../target/release/create_tinantas --prayoga karmani > test-files/tinantas-basic-karmani.csv
	../target/release/create_tinantas --prayoga karmani --sanadi Ric > test-files/tinantas-nic-karmani.csv
	../target/release/create_tinantas --prayoga karmani --sanadi san > test-files/tinantas-san-karmani.csv
	../target/release/create_tinantas --prayoga karmani --sanadi yaN > test-files/tinantas-yan-karmani.csv
	../target/release/create_tinantas --prayoga karmani --sanadi san,Ric > test-files/tinantas-san-nic-karmani.csv
	../target/release/create_tinantas --prayoga karmani --sanadi Ric,san > test-files/tinantas-nic-san-karmani.csv
	../target/release/create_krdantas > test-files/krdantas-basic.csv
	../target/release/create_krdantas --sanadi Ric > test-files/krdantas-nic.csv
	../target/release/create_krdantas --sanadi san > test-files/krdantas-san.csv
	../target/release/create_krdantas --sanadi yaN > test-files/krdantas-yan.csv
	../target/release/create_krdantas --sanadi yaNluk > test-files/krdantas-yan-luk.csv
	../target/release/create_dhatus > test-files/dhatus.csv

# Runs a full evaluation over all forms generated by vidyut-prakriya. `hash` is
# the SHA-256 hash of the test file. We use `hash` to verify test file
# integrity and ensure that our test cases are stable.
#
# NOTE: test files might contain invalid forms. Our goal with this test is
# simply to confirm that the system hasn't changed in unexpected ways.
test_all: test_tinantas test_krdantas test_dhatus

test_tinantas:
	cargo build --release --bin test_results
	../target/release/test_results \
		--data-type tinanta \
		--test-cases test-files/tinantas-basic-kartari.csv \
	  --hash "2dfbc74c55529c9b2ce8dc3202b7c7dca844a4c8f207c2d729ce1fed921fe1b2"
	../target/release/test_results \
		--data-type tinanta \
  	--test-cases test-files/tinantas-nic-kartari.csv \
    --hash "2901d9a7323bd662909ff4ad75d4e8237dca576a92dae36d3059431584c77f9c"
	../target/release/test_results \
		--data-type tinanta \
		--test-cases test-files/tinantas-san-kartari.csv \
		--hash "f54f89f6652176d48781baab2ea006f4ffc3dc637da1b7fa32b53c0bd7775ff2"
	../target/release/test_results \
		--data-type tinanta \
		--test-cases test-files/tinantas-yan-kartari.csv \
		--hash "69fa8583b872d0c8f21f42815515a7457050a583fad99c062831d817a6094db4"
	../target/release/test_results \
		--data-type tinanta \
		--test-cases test-files/tinantas-yan-luk-kartari.csv \
		--hash "0c4776f55b80bdb4e69e137c258d7365efa1f4e6f1e8c58753846646041428ec"
	../target/release/test_results \
		--data-type tinanta \
		--test-cases test-files/tinantas-san-nic-kartari.csv \
		--hash "58ccd63ddcb785e84253990bb379aad51d93e68b421adf2e0be9c70edf454bd3"
	../target/release/test_results \
		--data-type tinanta \
		--test-cases test-files/tinantas-nic-san-kartari.csv \
		--hash "6618699600fdd272c6cfbe1ffad7567f9bdd8950dfabeb859e6cfffed83836f1"
	../target/release/test_results \
		--data-type tinanta \
		--test-cases test-files/tinantas-basic-karmani.csv \
    --hash "66fa96d66a1fb52d639cc6516c89c54883d71cad2e3558c9984cfdc2d75a6b5e"
	../target/release/test_results \
		--data-type tinanta \
		--test-cases test-files/tinantas-nic-karmani.csv \
    --hash "218964795f2d8dba96cefa0f49578f0c636575325bd23412bc10d80fbbb1545a"
	../target/release/test_results \
		--data-type tinanta \
		--test-cases test-files/tinantas-san-karmani.csv \
    --hash "a682c39d420379ebc77598154a4804d94f6c35632877f5cc508b46ddbd548ba9"
	../target/release/test_results \
		--data-type tinanta \
		--test-cases test-files/tinantas-yan-karmani.csv \
    --hash "f4c2dedc816bec356e97c46831ce35c2272ffeb2d5bb29bfa332cff393e67c9f"
	../target/release/test_results \
		--data-type tinanta \
		--test-cases test-files/tinantas-san-nic-karmani.csv \
		--hash "ef958478945d449bbd093b02a7f4b84f14939c365c67cec65481b168c2ffdc97"
	../target/release/test_results \
		--data-type tinanta \
		--test-cases test-files/tinantas-nic-san-karmani.csv \
		--hash "e6ce97fcae9a5855dad2486737e8e28f4a7581190d7b10f9e9592603374504c8"

test_krdantas:
	cargo build --release --bin test_results
	../target/release/test_results \
		--data-type krdanta \
		--test-cases test-files/krdantas-basic.csv \
	  --hash "90bf0b99a2b641c74a77bbfc1864d904a5ce05ba5aa011f69ea0b12b6e2693e4"
	../target/release/test_results \
		--data-type krdanta \
		--test-cases test-files/krdantas-nic.csv \
	  --hash "58fb5d4eef55f5b0d8475e87665cba0038d6daf882399c60a03972e5abc7ed28"
	../target/release/test_results \
		--data-type krdanta \
		--test-cases test-files/krdantas-san.csv \
	  --hash "a689755607b5b634f36ffdb9f01aba212df68eab3d1ddf5cf1cbd8b25ffafaa3"
	../target/release/test_results \
		--data-type krdanta \
		--test-cases test-files/krdantas-yan.csv \
	  --hash "7d14c2e8d6f83eff87b6cbdcfb3fedf66bde3e880a555a836b0feaaecee3bc41"
	../target/release/test_results \
		--data-type krdanta \
		--test-cases test-files/krdantas-yan-luk.csv \
	  --hash "49cfda9501ba6076e7285a131d9efb1f2d0964fabb71b2e176d94a151e6695c9"

test_dhatus:
	cargo build --release --bin test_results
	../target/release/test_results \
		--data-type dhatu \
		--test-cases test-files/dhatus.csv \
	  --hash "bc7d210cc44e1231e0f89d3f6e39de4288b0c75fa108a1168003fc7c33a16965"


test_subantas:
	cargo run --bin test_subantas -- \
		--test-cases test-files/subantas.csv

check_rule_coverage:
	./scripts/check_rule_coverage.py > report.log 


# Performance
# ~~~~~~~~~~~

# Profiles the program's execution time on OSX. This command will probably not
# work on other operating systems.
profile-time-osx:
	cargo instruments -t time --release --example bench


# Other
# ~~~~~

# Generates project docs and opens them in your default browser.
docs:
	cargo doc --no-deps --open


# Web builds
# ----------

# Builds WASM module and JS wrapper (pkg/vidyut_prakriya.js).
#
# This is a release build. Creating it will be slower but smaller and (perhaps)
# more performant.
wasm_release:
	wasm-pack build --target web --release -- --features serde

# Builds WASM module and JS wrapper (pkg/vidyut_prakriya.js).
#
# This is a dev build. Creating it will be faster, but size and performance
# will not be optimized.
wasm_dev:
	wasm-pack build --target web -- --features serde

# Builds a simple web debugger.
debugger:
	./scripts/run-debugger.sh
