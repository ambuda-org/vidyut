# Unit tests
# ~~~~~~~~~~

# Runs all unit tests in the crate.
unit_tests:
	cargo test --lib

# Generates a simple coverage report and writes it to disk as an HTML file.
coverage:
	cargo llvm-cov --html


# Integration tests
# ~~~~~~~~~~~~~~~~~

# Generates all tinantas, krdantas, and dhatus supported by the program and writes them to disk.
create_test_files:
	cargo build --release --bin create_test_files
	../target/release/create_test_files --output-dir test-files

# Runs a full evaluation over all forms generated by vidyut-prakriya. `hash` is
# the SHA-256 hash of the test file. We use `hash` to verify test file
# integrity and ensure that our test cases are stable.
#
# NOTE: test files might contain invalid forms. Our goal with this test is
# simply to confirm that the system hasn't changed in unexpected ways.
test_all: test_tinantas test_krdantas test_dhatus

test_tinantas:
	cargo build --release --bin test_results
	../target/release/test_results \
		--data-type tinanta \
		--test-cases test-files/tinantas-basic.csv \
	  --hash "b5af09ca0580ca14484f75618e7515b29c16054111092b5cc550accb244e1e28"
	../target/release/test_results \
		--data-type tinanta \
  	--test-cases test-files/tinantas-nic.csv \
    --hash "d8cf36e3354075b014761ecb39180655f50498c032fd262e0f9f3d7e0558ab95"
	../target/release/test_results \
		--data-type tinanta \
		--test-cases test-files/tinantas-san.csv \
		--hash "bb44e1642942c47e8d4fe09cefdab4f005c0b2653e4dc72f847b9cbf33ac9694"
	../target/release/test_results \
		--data-type tinanta \
		--test-cases test-files/tinantas-yan.csv \
		--hash "06b136ed48064c00eed2e6320ebdc8b086a0e93bd3dedbb375a3d680f23a14a0"
	../target/release/test_results \
		--data-type tinanta \
		--test-cases test-files/tinantas-yan-luk.csv \
		--hash "7cd36afdcd38beef9bd66db40e41a080e2db2aea794f6daa06e926096ae48104"
	../target/release/test_results \
		--data-type tinanta \
		--test-cases test-files/tinantas-san-nic.csv \
		--hash "c1f561806c1639926621dcabf69a31285b99f00c80e5fa57e3a4a4afa9310499"
	../target/release/test_results \
		--data-type tinanta \
		--test-cases test-files/tinantas-nic-san.csv \
		--hash "8e102d104eea6483e82ad2be8a8005716586ce4b0d2aa447fc20ada0f2882158"

test_krdantas:
	cargo build --release --bin test_results
	../target/release/test_results \
		--data-type krdanta \
		--test-cases test-files/krdantas-basic.csv \
	  --hash "4ff8687f9a2c36eddd58a23637983ec87319ed5c4616aabe686d0e2b91a558b2"
	../target/release/test_results \
		--data-type krdanta \
		--test-cases test-files/krdantas-nic.csv \
	  --hash "2acacdc4000bd02a58905ef431a65d9d3666296ef9ed9ab0571935f7586e12b9"
	../target/release/test_results \
		--data-type krdanta \
		--test-cases test-files/krdantas-san.csv \
	  --hash "294ecfdf8ad81c0164c466b423a3f088f01c7de7894d5efb5fadb74294bf05ff"
	../target/release/test_results \
		--data-type krdanta \
		--test-cases test-files/krdantas-yan.csv \
	  --hash "51d9faea44e8295a8e942a0bab8d8f66d4412ff9767c70d24be4408648b7781f"
	../target/release/test_results \
		--data-type krdanta \
		--test-cases test-files/krdantas-yan-luk.csv \
	  --hash "7e28699c1de0739c567b6007cad110487f59a8bbb3ecad31cc51b990840b6a08"

test_dhatus:
	cargo build --release --bin test_results
	../target/release/test_results \
		--data-type dhatu \
		--test-cases test-files/dhatus.csv \
	  --hash "0b91b392570b0e08aa4d0373f45f7c28c00abcdb8fde05bd1871d7da26d3efa1"


test_subantas:
	cargo run --bin test_subantas -- \
		--test-cases test-files/subantas.csv

check_rule_coverage:
	./scripts/check_rule_coverage.py > report.log 


# Performance
# ~~~~~~~~~~~

# Profiles the program's execution time on OSX. This command will probably not
# work on other operating systems.
profile-time-osx:
	cargo instruments -t time --release --example bench


# Other
# ~~~~~

# Generates project docs and opens them in your default browser.
docs:
	cargo doc --no-deps --open


# Web builds
# ----------

# Builds WASM module and JS wrapper (pkg/vidyut_prakriya.js).
#
# This is a release build. Creating it will be slower but smaller and (perhaps)
# more performant.
wasm_release:
	wasm-pack build --target web --release -- --features serde

# Builds WASM module and JS wrapper (pkg/vidyut_prakriya.js).
#
# This is a dev build. Creating it will be faster, but size and performance
# will not be optimized.
wasm_dev:
	wasm-pack build --target web -- --features serde

# Builds a simple web debugger.
debugger:
	./scripts/run-debugger.sh
