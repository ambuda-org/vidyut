# Main commands
# ~~~~~~~~~~~~~

# Generates all tinantas supported by the program and writes them to stdout.
create_tinantas:
	cargo run --release --bin create_tinantas


# Generates all krdantas-prAtipadikas supported by the program and writes them to stdout.
create_krdantas:
	cargo run --release --bin create_krdantas


# Unit tests
# ~~~~~~~~~~

# Runs all unit tests in the crate.
unit_tests:
	cargo test --lib

# Generates a simple coverage report and writes it to disk as an HTML file.
coverage:
	cargo llvm-cov --html


# Integration tests
# ~~~~~~~~~~~~~~~~~

# Generates all tinantas supported by the program and writes them to disk.
create_test_files:
	cargo build --release
	../target/release/create_tinantas --prayoga kartari > test-files/tinantas-basic-kartari.csv
	../target/release/create_tinantas --sanadi Ric --prayoga kartari > test-files/tinantas-nic-kartari.csv
	../target/release/create_tinantas --sanadi san --prayoga kartari > test-files/tinantas-san-kartari.csv
	../target/release/create_tinantas --sanadi yaN --prayoga kartari > test-files/tinantas-yan-kartari.csv
	../target/release/create_tinantas --sanadi yaNluk --prayoga kartari > test-files/tinantas-yan-luk-kartari.csv
	../target/release/create_tinantas --prayoga karmani > test-files/tinantas-basic-karmani.csv
	../target/release/create_tinantas --sanadi Ric --prayoga karmani > test-files/tinantas-nic-karmani.csv
	../target/release/create_tinantas --sanadi san --prayoga karmani > test-files/tinantas-san-karmani.csv
	../target/release/create_tinantas --sanadi yaN --prayoga karmani > test-files/tinantas-yan-karmani.csv
	../target/release/create_krdantas --krt ktvA > test-files/krdantas-ktvA.csv
	../target/release/create_krdantas --krt kta > test-files/krdantas-kta.csv

# Runs a full evaluation over all forms generated by vidyut-prakriya. `hash` is
# the SHA-256 hash of the test file. We use `hash` to verify test file
# integrity and ensure that our test cases are stable.
#
# NOTE: test files might contain invalid forms. Our goal with this test is
# simply to confirm that the system hasn't changed in unexpected ways.
test_all: test_tinantas test_krdantas

test_tinantas:
	cargo build --release
	../target/release/test_tinantas \
		--test-cases test-files/tinantas-basic-kartari.csv \
	  --hash "28293a6aa746f04dff1a5c3b822396c236df269460d691bd137ba01a2c80557f"
	../target/release/test_tinantas \
  	--test-cases test-files/tinantas-nic-kartari.csv \
    --hash "e4ab38f9c71d040bf8cbf7dbc6bb1951749b831240f9248288389a68b24ef413"
	../target/release/test_tinantas \
		--test-cases test-files/tinantas-san-kartari.csv \
		--hash "ef278531cd45ba1df9af60e5b4b8ef582fdbe7a7eb31478fe35b9600c42380fc"
	../target/release/test_tinantas \
		--test-cases test-files/tinantas-yan-kartari.csv \
		--hash "be90fccc6f3907862cf820969094fd958b44b58a447a7a6369edbecde75d8cd4"
	../target/release/test_tinantas \
		--test-cases test-files/tinantas-yan-luk-kartari.csv \
		--hash "aec7b4524b159e195e38ce4b0e5e1335940b60cb41606ba31d1b9fbd010f7d11"
	../target/release/test_tinantas \
		--test-cases test-files/tinantas-basic-karmani.csv \
    --hash "b3621fe5bf2295f2f1d15270aa26b9fc973450126cd4a551e53f91571e4d531c"
	../target/release/test_tinantas \
		--test-cases test-files/tinantas-nic-karmani.csv \
    --hash "f4760cd6da0496f6db82f1812ba168a18e8cde4e5dffafee815e1e88d19abb36"
	../target/release/test_tinantas \
		--test-cases test-files/tinantas-san-karmani.csv \
    --hash "089160604d7a5a40f8f71e1234cccc3667135b3e2654c4ac346677727e5aae80"
	../target/release/test_tinantas \
		--test-cases test-files/tinantas-yan-karmani.csv \
    --hash "260a684b78e4e66a68f89366c07850d1680a72424e2934392678359289a1916b"

test_krdantas:
	cargo build --release
	../target/release/test_krdantas \
		--test-cases test-files/krdantas-ktvA.csv \
	    --hash "59470473bec6cb2d2254217d604a2302c6ee8926571441b3281004a30abc81ce"
	../target/release/test_krdantas \
		--test-cases test-files/krdantas-kta.csv \
	    --hash "2ce641122f4c6ac243acb348d376f35586c5f960ea338b9b1f7b79f0f72e3c12"

test_subantas:
	cargo run --bin test_subantas -- \
		--test-cases test-files/subantas.csv

check_rule_coverage:
	./scripts/check_rule_coverage.py > report.log 


# Performance
# ~~~~~~~~~~~

# Profiles the program's execution time on OSX. This command will probably not
# work on other operating systems.
profile-time-osx:
	cargo instruments -t time --release --example create_all_tinantas > /dev/null


# Other
# ~~~~~

# Generates project docs and opens them in your default browser.
docs:
	cargo doc --no-deps --open


# Web builds
# ----------

# Builds WASM module and JS wrapper (pkg/vidyut_prakriya.js).
#
# This is a release build. Creating it will be slower but smaller and (perhaps)
# more performant.
wasm_release:
	wasm-pack build --target web --release

# Builds WASM module and JS wrapper (pkg/vidyut_prakriya.js).
#
# This is a dev build. Creating it will be faster, but size and performance
# will not be optimized.
wasm_dev:
	wasm-pack build --target web

# Builds a simple web debugger.
debugger:
	./scripts/run-debugger.sh
